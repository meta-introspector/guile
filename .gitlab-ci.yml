variables:
  GIT_DEPTH: 100
  GIT_SUBMODULE_STRATEGY: normal

.test:
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
    - "*.tar.gz"
    - ./*.log
    - ./config.h
    - ./**/*.log

Trisquel10-git:
  extends: .test
  image: kpengboy/trisquel:10.0
  stage: build
  before_script:
  - apt-get update -q
  - apt-get install -qqy git make gcc guile-3.0-dev libgnutls28-dev texinfo
  script:
  - ./bootstrap
  - ./configure
  - make syntax-check
  - make -j$(nproc) check V=1 VERBOSE=t
  - make dist
  - git diff --exit-code # nothing should change version controlled files

PureOS10-git:
  extends: .test
  image: pureos/byzantium:latest
  stage: build
  before_script:
  - apt-get update -q
  - apt-get install -qqy git make gcc guile-3.0-dev libgnutls28-dev texinfo
  script:
  - ./bootstrap
  - ./configure
  - make syntax-check
  - make -j$(nproc) check V=1 VERBOSE=t
  - make dist
  - git diff --exit-code # nothing should change version controlled files

Debian11-git:
  extends: .test
  image: debian:11
  stage: build
  before_script:
  - apt-get update -q
  - apt-get install -qqy git make gcc guile-3.0-dev libgnutls28-dev texinfo texlive
  script:
  - ./bootstrap
  - ./configure
  - make syntax-check
  - make -j$(nproc) distcheck V=1 VERBOSE=t
  - git diff --exit-code # nothing should change version controlled files

CentOS7-git:
  allow_failure: true # XXX FIXME bug in guile-gnutls?
  extends: .test
  image: centos:7
  stage: build
  before_script:
  - yum -y update
  - yum -y install git autoconf automake libtool make guile-devel gnutls-devel
  script:
  - ./bootstrap
  - ./configure
  - make syntax-check
  - make check V=1 VERBOSE=t
  - git diff --exit-code # nothing should change version controlled files

AlmaLinux9-git:
  allow_failure: true # XXX FIXME how to install guile30 on this platform?
  extends: .test
  image: almalinux:9
  stage: build
  before_script:
  - yum -y update
  - yum -y install epel-release
  - yum -y install git autoconf automake libtool make guile30-devel gnutls-devel
  script:
  - ./bootstrap
  - ./configure
  - make syntax-check
  - make check V=1 VERBOSE=t
  - git diff --exit-code # nothing should change version controlled files

Fedora36-git:
  extends: .test
  image: fedora:36
  stage: build
  before_script:
  - yum -y update
  - yum -y install git autoconf automake libtool make guile-devel gnutls-devel texinfo
  script:
  - ./bootstrap
  - ./configure
  - make syntax-check
  - make check V=1 VERBOSE=t
  - make dist
  - git diff --exit-code # nothing should change version controlled files

Ubuntu22.04-release:
  extends: .test
  image: ubuntu:22.04
  stage: build
  except:
    - tags # do-release-commit-and-tag: not on branch
  before_script:
  - apt-get update -q
  - apt-get install -qqy git make gcc guile-3.0-dev libgnutls28-dev texinfo indent
  script:
  - ./bootstrap
  - ./configure
  - make syntax-check
  - make
  - make dist
  - git diff --exit-code # nothing should change version controlled files
  - apt-get install -qqy texlive gpg gpgv2
  - gpg --batch --passphrase '' --quick-gen-key gnutls-help@lists.gnutls.org
  - git checkout $CI_COMMIT_BRANCH
  - git config user.email "gnutls-help@lists.gnutls.org"
  - git config user.name "Guile-GnuTLS CICD Builder"
  - git config user.signingkey gnutls-help@lists.gnutls.org
  - sed -i '5i ** WARNING This release was prepared automatically with no testing.\n' NEWS
  - git commit -m "Warn about automatic release." NEWS
  - make release-commit RELEASE='17.42.23 stable'
  - make
  - make release RELEASE='17.42.23 stable' V=1 VERBOSE=t
  - git diff --exit-code # nothing should change version controlled files

Trisquel10-tarball:
  extends: .test
  image: kpengboy/trisquel:10.0
  stage: test
  needs: [Trisquel10-git]
  before_script:
  - apt-get update -q
  - apt-get install -qqy make gcc guile-3.0-dev libgnutls28-dev
  script:
  - tar xfa guile-gnutls-*.tar.gz
  - cd `ls -d guile-gnutls-* | grep -v tar.gz`
  - ./configure
  - make check V=1 VERBOSE=t

Alpine-tarball:
  extends: .test
  image: alpine:latest
  stage: test
  needs: [Trisquel10-git]
  before_script:
  - apk update
  - apk add build-base guile-dev gnutls-dev
  script:
  - tar xfa guile-gnutls-*.tar.gz
  - cd `ls -d guile-gnutls-* | grep -v tar.gz`
  - ./configure
  - make check V=1 VERBOSE=t

ArchLinux-tarball:
  extends: .test
  image: archlinux:latest
  stage: test
  needs: [Trisquel10-git]
  before_script:
  - pacman -Syu --noconfirm make gcc pkgconf guile gnutls
  script:
  - tar xfa guile-gnutls-*.tar.gz
  - cd `ls -d guile-gnutls-* | grep -v tar.gz`
  - ./configure
  - make check V=1 VERBOSE=t

Fedora36-tarball:
  extends: .test
  image: fedora:36
  stage: test
  needs: [Trisquel10-git]
  before_script:
  - yum -y update
  - yum -y install make clang guile-devel gnutls-devel
  script:
  - tar xfa guile-gnutls-*.tar.gz
  - cd `ls -d guile-gnutls-* | grep -v tar.gz`
  - ./configure
  - make check V=1 VERBOSE=t

Ubuntu22.04-tarball:
  extends: .test
  image: ubuntu:22.04
  stage: test
  needs: [Trisquel10-git]
  before_script:
  - apt-get update -q
  - apt-get install -qqy make gcc guile-3.0-dev libgnutls28-dev
  script:
  - tar xfa guile-gnutls-*.tar.gz
  - cd `ls -d guile-gnutls-* | grep -v tar.gz`
  - ./configure
  - make check V=1 VERBOSE=t

web-manual:
  image: fedora:latest
  stage: build
  before_script:
  - yum -y update
  - yum -y install git autoconf automake libtool make guile-devel gnutls-devel texinfo
  - yum -y install texlive texinfo-tex
  script:
  - ./bootstrap
  - ./configure
  - make
  - make web-manual
  - git diff --exit-code # nothing should change version controlled files
  artifacts:
    when: on_success
    paths:
      - doc/manual

.pages:
  stage: deploy
  needs: ["web-manual"]
  script:
    - mkdir public
    - mv doc/manual public/manual
  artifacts:
    paths:
    - public
    expire_in: 30 days

pages:
  extends: .pages
  only:
    - master

pages-test:
  extends: .pages
  except:
    - master
